<?php


define("HASHING_COUNTS","SELECT
	HASHERS.HASHER_KY AS THE_KEY,
	HASHERS.HASHER_NAME AS NAME,
	COUNT(0) AS VALUE
FROM
	HASHERS
	JOIN HASHINGS ON HASHERS.HASHER_KY = HASHINGS.HASHER_KY
	JOIN HASHES on HASHINGS.HASH_KY = HASHES.HASH_KY
WHERE HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_KY, HASHERS.HASHER_NAME
ORDER BY VALUE DESC
");

define("HASHING_COUNTS_THIS_YEAR","SELECT
	HASHERS.HASHER_KY AS THE_KEY,
	HASHERS.HASHER_NAME AS NAME,
	COUNT(0) AS VALUE
FROM
	HASHERS
	JOIN HASHINGS ON HASHERS.HASHER_KY = HASHINGS.HASHER_KY
	JOIN HASHES on HASHINGS.HASH_KY = HASHES.HASH_KY
WHERE HASHES.KENNEL_KY = ?
  AND YEAR(HASHES.EVENT_DATE) = YEAR(CURDATE())
GROUP BY HASHERS.HASHER_KY, HASHERS.HASHER_NAME
ORDER BY VALUE DESC
");

define("HASHING_COUNTS_LAST_YEAR","SELECT
	HASHERS.HASHER_KY AS THE_KEY,
	HASHERS.HASHER_NAME AS NAME,
	COUNT(0) AS VALUE
FROM
	HASHERS
	JOIN HASHINGS ON HASHERS.HASHER_KY = HASHINGS.HASHER_KY
	JOIN HASHES on HASHINGS.HASH_KY = HASHES.HASH_KY
WHERE HASHES.KENNEL_KY = ?
  AND YEAR(HASHES.EVENT_DATE) = YEAR(CURDATE())-1
GROUP BY HASHERS.HASHER_KY, HASHERS.HASHER_NAME
ORDER BY VALUE DESC
");

define("HARING_COUNTS","SELECT
	HASHERS.HASHER_KY AS THE_KEY,
	HASHERS.HASHER_NAME AS NAME,
	COUNT(0) AS VALUE
FROM
	HASHERS
	JOIN HARINGS ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
	JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
WHERE HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_KY, HASHERS.HASHER_NAME
ORDER BY VALUE DESC"
);

define("HARING_COUNTS_THIS_YEAR","SELECT
	HASHERS.HASHER_KY AS THE_KEY,
	HASHERS.HASHER_NAME AS NAME,
	COUNT(0) AS VALUE
FROM
	HASHERS
	JOIN HARINGS ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
	JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
WHERE HASHES.KENNEL_KY = ?
  AND YEAR(HASHES.EVENT_DATE) = YEAR(CURDATE())
GROUP BY HASHERS.HASHER_KY, HASHERS.HASHER_NAME
ORDER BY VALUE DESC"
);

define("HARING_COUNTS_LAST_YEAR","SELECT
	HASHERS.HASHER_KY AS THE_KEY,
	HASHERS.HASHER_NAME AS NAME,
	COUNT(0) AS VALUE
FROM
	HASHERS
	JOIN HARINGS ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
	JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
WHERE HASHES.KENNEL_KY = ?
  AND YEAR(HASHES.EVENT_DATE) = YEAR(CURDATE())-1
GROUP BY HASHERS.HASHER_KY, HASHERS.HASHER_NAME
ORDER BY VALUE DESC"
);

define("NON_HYPER_HARING_COUNTS","SELECT
	HASHERS.HASHER_KY AS THE_KEY,
	HASHERS.HASHER_NAME AS NAME,
	COUNT(0) AS VALUE
FROM
	HASHERS
	JOIN HARINGS ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
	JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
WHERE
	HASHES.KENNEL_KY = ? AND
    HASHES.IS_HYPER = 0
GROUP BY 	HASHERS.HASHER_KY, HASHERS.HASHER_NAME
ORDER BY VALUE DESC");

define("HYPER_HARING_COUNTS","SELECT
	HASHERS.HASHER_KY AS THE_KEY,
	HASHERS.HASHER_NAME AS NAME,
	COUNT(0) AS VALUE
FROM
	HASHERS
	JOIN HARINGS ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
	JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
WHERE
	HASHES.KENNEL_KY = ? AND
    HASHES.IS_HYPER = 1
GROUP BY HASHERS.HASHER_KY, HASHERS.HASHER_NAME
ORDER BY VALUE DESC");

define("HARING_PERCENTAGES_HYPERS_VS_ALL","SELECT
	HASHERS.HASHER_NAME,
    HASHERS.HASHER_KY,
    ALL_HARING_COUNT_TEMP_TABLE.ALL_HARING_COUNT,
    HYPER_HARING_COUNT_TEMP_TABLE.HYPER_HARING_COUNT,
    ((HYPER_HARING_COUNT_TEMP_TABLE.HYPER_HARING_COUNT / ALL_HARING_COUNT_TEMP_TABLE.ALL_HARING_COUNT) * 100) AS HYPER_HARINGS_PERCENTAGE,
    (((ALL_HARING_COUNT_TEMP_TABLE.ALL_HARING_COUNT - HYPER_HARING_COUNT_TEMP_TABLE.HYPER_HARING_COUNT) / ALL_HARING_COUNT_TEMP_TABLE.ALL_HARING_COUNT) * 100) AS NON_HYPER_HARINGS_PERCENTAGE
FROM
	HASHERS
JOIN (SELECT
		HARINGS.HARINGS_HASHER_KY AS HARINGS_HASHER_KY,
		COUNT(HARINGS.HARINGS_HASHER_KY) AS ALL_HARING_COUNT
        FROM
            HARINGS
						JOIN HASHES on HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
						WHERE HASHES.KENNEL_KY = ?
        GROUP BY HARINGS.HARINGS_HASHER_KY) ALL_HARING_COUNT_TEMP_TABLE ON (HASHERS.HASHER_KY = ALL_HARING_COUNT_TEMP_TABLE.HARINGS_HASHER_KY)
JOIN (SELECT
		HARINGS.HARINGS_HASHER_KY AS HARINGS_HASHER_KY,
		COUNT(HARINGS.HARINGS_HASHER_KY) AS HYPER_HARING_COUNT
        FROM
            HARINGS JOIN HASHES on HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
				WHERE HASHES.IS_HYPER = 1
					AND HASHES.KENNEL_KY = ?
        GROUP BY HARINGS.HARINGS_HASHER_KY) HYPER_HARING_COUNT_TEMP_TABLE ON (HASHERS.HASHER_KY = HYPER_HARING_COUNT_TEMP_TABLE.HARINGS_HASHER_KY)
ORDER BY (((ALL_HARING_COUNT_TEMP_TABLE.ALL_HARING_COUNT - HYPER_HARING_COUNT_TEMP_TABLE.HYPER_HARING_COUNT) / ALL_HARING_COUNT_TEMP_TABLE.ALL_HARING_COUNT) * 100) DESC
");


define("HASHER_COUNTS_BY_YEAR","SELECT HASHERS.HASHER_NAME AS HASHER_NAME,count(*) AS THE_COUNT
  FROM (
    HASHERS
      JOIN HASHINGS ON(HASHERS.HASHER_KY = HASHINGS.HASHER_KY))
      JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
    YEAR(HASHES.EVENT_DATE) = ? AND HASHES.KENNEL_KY = ?
  GROUP BY HASHERS.HASHER_NAME ORDER BY THE_COUNT DESC"
);

define("PER_KENNEL_HASH_COUNTS_BY_YEAR","SELECT COUNT(*) AS THE_COUNT
	FROM HASHES
	WHERE YEAR(HASHES.EVENT_DATE) = ? AND HASHES.KENNEL_KY = ?"
);

define("PER_KENNEL_HYPER_HASH_COUNTS_BY_YEAR","SELECT COUNT(*) AS THE_COUNT
	FROM HASHES
	WHERE YEAR(HASHES.EVENT_DATE) = ? AND HASHES.KENNEL_KY = ? AND HASHES.IS_HYPER = 1"
);

define("PER_KENNEL_TRUE_HASH_COUNTS_BY_YEAR","SELECT COUNT(*) AS THE_COUNT
	FROM HASHES
	WHERE YEAR(HASHES.EVENT_DATE) = ? AND HASHES.KENNEL_KY = ? AND HASHES.IS_HYPER = 0"
);

define("PER_KENNEL_HASHERS_COUNT_BY_YEAR","SELECT COUNT(DISTINCT HASHERS.HASHER_KY) AS THE_COUNT
FROM
    HASHERS
      JOIN HASHINGS ON(HASHERS.HASHER_KY = HASHINGS.HASHER_KY)
      JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
    YEAR(HASHES.EVENT_DATE) = ? AND HASHES.KENNEL_KY = ?");

define("PER_KENNEL_HARES_COUNT_BY_YEAR","SELECT COUNT(DISTINCT HASHERS.HASHER_KY) AS THE_COUNT
FROM
    HASHERS
      JOIN HARINGS ON(HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)
      JOIN HASHES ON HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
    YEAR(HASHES.EVENT_DATE) = ? AND HASHES.KENNEL_KY = ?");

define("PER_KENNEL_TRUE_HARES_COUNT_BY_YEAR","SELECT COUNT(DISTINCT HASHERS.HASHER_KY) AS THE_COUNT
FROM
    HASHERS
      JOIN HARINGS ON(HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)
      JOIN HASHES ON HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
    YEAR(HASHES.EVENT_DATE) = ? AND HASHES.KENNEL_KY = ? AND HASHES.IS_HYPER = 0");

define("PER_KENNEL_HYPER_HARES_COUNT_BY_YEAR","SELECT COUNT(DISTINCT HASHERS.HASHER_KY) AS THE_COUNT
FROM
    HASHERS
      JOIN HARINGS ON(HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)
      JOIN HASHES ON HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
    YEAR(HASHES.EVENT_DATE) = ? AND HASHES.KENNEL_KY = ? AND HASHES.IS_HYPER = 1");

define("TOTAL_HARE_COUNTS_BY_YEAR","SELECT HASHERS.HASHER_NAME AS HASHER_NAME,count(*) AS THE_COUNT
FROM (
	HASHERS
    JOIN HARINGS ON(HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY))
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
WHERE
	YEAR(HASHES.EVENT_DATE) = ? AND HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_NAME ORDER BY THE_COUNT DESC");

define("HYPER_HARE_COUNTS_BY_YEAR","SELECT HASHERS.HASHER_NAME AS HASHER_NAME,count(*) AS THE_COUNT
FROM (
	HASHERS
    JOIN HARINGS ON(HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY))
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
WHERE
	YEAR(HASHES.EVENT_DATE) = ? AND
    HASHES.IS_HYPER = 1 AND HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_NAME ORDER BY THE_COUNT DESC");

define("NONHYPER_HARE_COUNTS_BY_YEAR","SELECT HASHERS.HASHER_NAME AS HASHER_NAME,count(*) AS THE_COUNT
FROM (
	HASHERS
    JOIN HARINGS ON(HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY))
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
WHERE
	YEAR(HASHES.EVENT_DATE) = ? AND
    HASHES.IS_HYPER = 0 AND HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_NAME ORDER BY THE_COUNT DESC");

define ("SELECT_HASHERS_VIRGIN_HASH","SELECT
	HASHES.HASH_KY,
    KENNEL_KY,
    KENNEL_EVENT_NUMBER,
    EVENT_DATE,
    EVENT_LOCATION,
    EVENT_CITY,
    EVENT_STATE,
    SPECIAL_EVENT_DESCRIPTION,
    VIRGIN_COUNT,
    IS_HYPER,
    DATE_FORMAT(EVENT_DATE,\"%m/%d/%Y\") AS EVENT_DATE_FORMATTED,
    TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) AS YEARS_SINCE_EVENT,
    TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) AS MONTHS_SINCE_EVENT,
    TIMESTAMPDIFF(DAY, DATE_ADD(DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), INTERVAL TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) MONTH), DATE(SYSDATE())) AS DAYS_SINCE_EVENT
FROM
	HASHES
    JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
WHERE
	HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
ORDER BY
	HASHES.EVENT_DATE ASC
LIMIT 1");

define ("SELECT_KENNELS_VIRGIN_HASH","SELECT
	HASHES.HASH_KY,
    KENNEL_KY,
    KENNEL_EVENT_NUMBER,
    EVENT_DATE,
    EVENT_LOCATION,
    EVENT_CITY,
    EVENT_STATE,
    SPECIAL_EVENT_DESCRIPTION,
    VIRGIN_COUNT,
    IS_HYPER,
    DATE_FORMAT(EVENT_DATE,\"%m/%d/%Y\") AS EVENT_DATE_FORMATTED,
    TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) AS YEARS_SINCE_EVENT,
    TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) AS MONTHS_SINCE_EVENT,
    TIMESTAMPDIFF(DAY, DATE_ADD(DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), INTERVAL TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) MONTH), DATE(SYSDATE())) AS DAYS_SINCE_EVENT
FROM
	HASHES
    JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
WHERE
    HASHES.KENNEL_KY = ?
ORDER BY
	HASHES.EVENT_DATE ASC
LIMIT 1");

define ("SELECT_HASHERS_MOST_RECENT_HASH","SELECT
	HASHES.HASH_KY,
    KENNEL_KY,
    KENNEL_EVENT_NUMBER,
    EVENT_DATE,
    EVENT_LOCATION,
    EVENT_CITY,
    EVENT_STATE,
    SPECIAL_EVENT_DESCRIPTION,
    VIRGIN_COUNT,
    IS_HYPER,
    DATE_FORMAT(EVENT_DATE,\"%m/%d/%Y\") AS EVENT_DATE_FORMATTED,
    TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) AS YEARS_SINCE_EVENT,
    TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) AS MONTHS_SINCE_EVENT,
    TIMESTAMPDIFF(DAY, DATE_ADD(DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), INTERVAL TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) MONTH), DATE(SYSDATE())) AS DAYS_SINCE_EVENT
FROM
	HASHES
    JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
WHERE
	HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
ORDER BY
	HASHES.EVENT_DATE DESC
LIMIT 1");

define ("SELECT_KENNELS_MOST_RECENT_HASH","SELECT
	HASHES.HASH_KY,
    KENNEL_KY,
    KENNEL_EVENT_NUMBER,
    EVENT_DATE,
    EVENT_LOCATION,
    EVENT_CITY,
    EVENT_STATE,
    SPECIAL_EVENT_DESCRIPTION,
    VIRGIN_COUNT,
    IS_HYPER,
    DATE_FORMAT(EVENT_DATE,\"%m/%d/%Y\") AS EVENT_DATE_FORMATTED,
    TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) AS YEARS_SINCE_EVENT,
    TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) AS MONTHS_SINCE_EVENT,
    TIMESTAMPDIFF(DAY, DATE_ADD(DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), INTERVAL TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) MONTH), DATE(SYSDATE())) AS DAYS_SINCE_EVENT
FROM
	HASHES
    JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
WHERE
    HASHES.KENNEL_KY = ?
ORDER BY
	HASHES.EVENT_DATE DESC
LIMIT 1");




define ("HASHER_HASH_COUNTS_BY_YEAR","SELECT YEAR(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHINGS
    JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
	HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY YEAR(EVENT_DATE)
ORDER BY YEAR(EVENT_DATE)");

define("HASHER_HASH_COUNTS_BY_MONTH","SELECT MONTH(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHINGS
    JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
	HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY MONTH(EVENT_DATE)
ORDER BY MONTH(EVENT_DATE)");

define("HASHER_HASH_COUNTS_BY_MONTH_NAME","SELECT
	THE_VALUE,
    THE_COUNT ,
	CASE THE_VALUE
		WHEN '1' THEN 'January'
		WHEN '2' THEN 'February'
		WHEN '3' THEN 'March'
		WHEN '4' THEN 'April'
		WHEN '5' THEN 'May'
		WHEN '6' THEN 'June'
		WHEN '7' THEN 'July'
		WHEN '8' THEN 'August'
		WHEN '9' THEN 'September'
		WHEN '10' THEN 'October'
		WHEN '11' THEN 'November'
		WHEN '12' THEN 'December'
    END AS MONTH_NAME
FROM
(
	SELECT MONTH(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
	FROM
		HASHINGS
		JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
	WHERE
		HASHINGS.HASHER_KY = ? AND
		HASHES.KENNEL_KY = ?
	GROUP BY MONTH(EVENT_DATE)
	ORDER BY MONTH(EVENT_DATE)
) TEMP_TABLE");

define("KENNEL_HASH_COUNTS_BY_MONTH_NAME","SELECT
	THE_VALUE,
    THE_COUNT ,
	CASE THE_VALUE
		WHEN '1' THEN 'January'
		WHEN '2' THEN 'February'
		WHEN '3' THEN 'March'
		WHEN '4' THEN 'April'
		WHEN '5' THEN 'May'
		WHEN '6' THEN 'June'
		WHEN '7' THEN 'July'
		WHEN '8' THEN 'August'
		WHEN '9' THEN 'September'
		WHEN '10' THEN 'October'
		WHEN '11' THEN 'November'
		WHEN '12' THEN 'December'
    END AS MONTH_NAME
FROM
(
	SELECT MONTH(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
	FROM
		HASHES
	WHERE
		HASHES.KENNEL_KY = ?
	GROUP BY MONTH(EVENT_DATE)
	ORDER BY MONTH(EVENT_DATE)
) TEMP_TABLE");

define("HASHER_HASH_COUNTS_BY_QUARTER","SELECT QUARTER(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHINGS
    JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
	HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY QUARTER(EVENT_DATE)
ORDER BY QUARTER(EVENT_DATE)
");

define("KENNEL_HASH_COUNTS_BY_QUARTER","SELECT QUARTER(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHES
  WHERE
    HASHES.KENNEL_KY = ?
GROUP BY QUARTER(EVENT_DATE)
ORDER BY QUARTER(EVENT_DATE)
");

define("HASHER_HASH_COUNTS_BY_DAYNAME","SELECT DAYNAME(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHINGS
    JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
	HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY DAYNAME(EVENT_DATE)
ORDER BY DAYNAME(EVENT_DATE)
;");

define("KENNEL_HASH_COUNTS_BY_DAYNAME","SELECT DAYNAME(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHES
  WHERE
    HASHES.KENNEL_KY = ?
GROUP BY DAYNAME(EVENT_DATE)
ORDER BY DAYNAME(EVENT_DATE)
;");

define("HASHER_HASH_COUNTS_BY_STATE","SELECT HASHES.EVENT_STATE AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHINGS
    JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
	HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY HASHES.EVENT_STATE
ORDER BY THE_COUNT DESC"
);

define("KENNEL_HASH_COUNTS_BY_STATE","SELECT HASHES.EVENT_STATE AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHES
  WHERE
    HASHES.KENNEL_KY = ?
GROUP BY HASHES.EVENT_STATE
ORDER BY THE_COUNT DESC"
);

define("HASHER_HASH_COUNTS_BY_COUNTY","SELECT HASHES.COUNTY AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHINGS
    JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
	HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY HASHES.COUNTY
ORDER BY THE_COUNT DESC"
);

define("KENNEL_HASH_COUNTS_BY_COUNTY","SELECT HASHES.COUNTY AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHES
  WHERE
    HASHES.KENNEL_KY = ?
GROUP BY HASHES.COUNTY
ORDER BY THE_COUNT DESC"
);

define("HASHER_HASH_COUNTS_BY_POSTAL_CODE","SELECT HASHES.POSTAL_CODE AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHINGS
    JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
	HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY HASHES.POSTAL_CODE
ORDER BY THE_COUNT DESC"
);

define("KENNEL_HASH_COUNTS_BY_POSTAL_CODE","SELECT HASHES.POSTAL_CODE AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHES
  WHERE
    HASHES.KENNEL_KY = ?
GROUP BY HASHES.POSTAL_CODE
ORDER BY THE_COUNT DESC"
);

define("HASHER_HASH_COUNTS_BY_CITY","SELECT HASHES.EVENT_CITY AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHINGS
    JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
	HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY HASHES.EVENT_CITY
ORDER BY THE_COUNT DESC"
);

define("KENNEL_HASH_COUNTS_BY_CITY","SELECT HASHES.EVENT_CITY AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHES
  WHERE
    HASHES.KENNEL_KY = ?
GROUP BY HASHES.EVENT_CITY
ORDER BY THE_COUNT DESC"
);



define("HASHER_ALL_HARING_COUNTS_BY_YEAR","SELECT YEAR(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY YEAR(EVENT_DATE)
ORDER BY YEAR(EVENT_DATE)");

define("HASHER_ALL_HARING_COUNTS_BY_MONTH","SELECT MONTH(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY MONTH(EVENT_DATE)
ORDER BY MONTH(EVENT_DATE)");

define("HASHER_ALL_HARING_COUNTS_BY_QUARTER","SELECT QUARTER(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY QUARTER(EVENT_DATE)
ORDER BY QUARTER(EVENT_DATE)");

define("KENNEL_NUM_OF_DISTINCT_HASHERS","SELECT COUNT(DISTINCT(HASHINGS.HASHER_KY)) AS THE_COUNT
	FROM HASHES JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
	WHERE HASHES.KENNEL_KY = ?");

define("KENNEL_NUM_OF_DISTINCT_TRUE_HARES","SELECT COUNT(DISTINCT(HARINGS.HARINGS_HASHER_KY)) AS THE_COUNT
	FROM HASHES JOIN HARINGS ON HASHES.HASH_KY = HARINGS.HARINGS_HASH_KY
	WHERE HASHES.KENNEL_KY = ? AND HASHES.IS_HYPER = 0");

define("KENNEL_NUM_OF_DISTINCT_HYPER_HARES","SELECT COUNT(DISTINCT(HARINGS.HARINGS_HASHER_KY)) AS THE_COUNT
	FROM HASHES JOIN HARINGS ON HASHES.HASH_KY = HARINGS.HARINGS_HASH_KY
	WHERE HASHES.KENNEL_KY = ? AND HASHES.IS_HYPER = 1");

define("KENNEL_NUM_OF_DISTINCT_OVERALL_HARES","SELECT COUNT(DISTINCT(HARINGS.HARINGS_HASHER_KY)) AS THE_COUNT
	FROM HASHES JOIN HARINGS ON HASHES.HASH_KY = HARINGS.HARINGS_HASH_KY
	WHERE HASHES.KENNEL_KY = ?");




define("HASHER_ALL_HARING_COUNTS_BY_DAYNAME","SELECT DAYNAME(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY DAYNAME(EVENT_DATE)
ORDER BY DAYNAME(EVENT_DATE)");

define("HASHER_ALL_HARING_COUNTS_BY_STATE","SELECT HASHES.EVENT_STATE AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY HASHES.EVENT_STATE
ORDER BY THE_COUNT DESC");

define("HASHER_ALL_HARING_COUNTS_BY_CITY","SELECT HASHES.EVENT_CITY AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY HASHES.EVENT_CITY
ORDER BY THE_COUNT DESC");

define("HASHER_NONHYPER_HARING_COUNTS_BY_YEAR","SELECT YEAR(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ? AND
		HASHES.IS_HYPER = 0
GROUP BY YEAR(EVENT_DATE)
ORDER BY YEAR(EVENT_DATE)");

define("HASHER_NONHYPER_HARING_COUNTS_BY_MONTH","SELECT MONTH(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ? AND
		HASHES.IS_HYPER = 0
GROUP BY MONTH(EVENT_DATE)
ORDER BY MONTH(EVENT_DATE)");

define("HASHER_NONHYPER_HARING_COUNTS_BY_QUARTER","SELECT QUARTER(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ? AND
		HASHES.IS_HYPER = 0
GROUP BY QUARTER(EVENT_DATE)
ORDER BY QUARTER(EVENT_DATE)");


define("HASHER_NONHYPER_HARING_COUNTS_BY_DAYNAME","SELECT DAYNAME(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ? AND
		HASHES.IS_HYPER = 0
GROUP BY DAYNAME(EVENT_DATE)
ORDER BY DAYNAME(EVENT_DATE)");

define("HASHER_NONHYPER_HARING_COUNTS_BY_STATE","SELECT HASHES.EVENT_STATE AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ? AND
		HASHES.IS_HYPER = 0
GROUP BY HASHES.EVENT_STATE
ORDER BY THE_COUNT DESC");

define("HASHER_NONHYPER_HARING_COUNTS_BY_CITY","SELECT HASHES.EVENT_CITY AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ? AND
		HASHES.IS_HYPER =0
GROUP BY HASHES.EVENT_CITY
ORDER BY THE_COUNT DESC");

define("HASHER_HYPER_HARING_COUNTS_BY_CITY","SELECT HASHES.EVENT_CITY AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ? AND
		HASHES.IS_HYPER =1
GROUP BY HASHES.EVENT_CITY
ORDER BY THE_COUNT DESC");

define("COHARE_COUNT_BY_HARE","SELECT
      	TEMPTABLE.HASHER_NAME AS THE_VALUE,
          COUNT(*) AS THE_COUNT
      FROM
      	HARINGS
          JOIN HASHERS ON HARINGS.HARINGS_HASHER_KY = HASHERS.HASHER_KY
          JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
          JOIN (
						SELECT
								HARINGS_HASH_KY,
								HASHER_NAME,
								HARINGS_HASHER_KY
						FROM
								HARINGS
						JOIN HASHERS ON HARINGS.HARINGS_HASHER_KY = HASHERS.HASHER_KY
		        JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		        WHERE
								HASHES.KENNEL_KY = ?
					)
          TEMPTABLE ON HARINGS.HARINGS_HASH_KY = TEMPTABLE.HARINGS_HASH_KY
      WHERE
      	HARINGS.HARINGS_HASHER_KY = ?
          AND TEMPTABLE.HARINGS_HASHER_KY <> ?
          AND HASHES.IS_HYPER IN (?,?)
      GROUP BY TEMPTABLE.HASHER_NAME
      ORDER BY THE_COUNT DESC");

define("HARING_PERCENTAGE_ALL_HASHES","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	HASH_COUNT_TEMP_TABLE.HASH_COUNT AS HASH_COUNT,
	HARING_COUNT_TEMP_TABLE.HARING_COUNT AS HARING_COUNT,
	((HARING_COUNT_TEMP_TABLE.HARING_COUNT / HASH_COUNT_TEMP_TABLE.HASH_COUNT) * 100) AS HARE_PERCENTAGE
FROM
	((HASHERS
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HARINGS.HARINGS_HASHER_KY AS HARINGS_HASHER_KY,
			COUNT(HARINGS.HARINGS_HASHER_KY) AS HARING_COUNT
		FROM
			HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HARINGS.HARINGS_HASHER_KY
        ) HARING_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HARING_COUNT_TEMP_TABLE.HARINGS_HASHER_KY)))
WHERE
	(HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?)
ORDER BY ((HARING_COUNT_TEMP_TABLE.HARING_COUNT / HASH_COUNT_TEMP_TABLE.HASH_COUNT) * 100) DESC");

define("HARING_PERCENTAGE_NON_HYPER_HASHES","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	HASH_COUNT_TEMP_TABLE.HASH_COUNT AS HASH_COUNT,
	HARING_COUNT_TEMP_TABLE.HARING_COUNT AS HARING_COUNT,
	((HARING_COUNT_TEMP_TABLE.HARING_COUNT / HASH_COUNT_TEMP_TABLE.HASH_COUNT) * 100) AS HARE_PERCENTAGE
FROM
	((HASHERS
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HARINGS.HARINGS_HASHER_KY AS HARINGS_HASHER_KY,
			COUNT(HARINGS.HARINGS_HASHER_KY) AS HARING_COUNT
		FROM
			HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
			AND HASHES.IS_HYPER=0
		GROUP BY HARINGS.HARINGS_HASHER_KY
        ) HARING_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HARING_COUNT_TEMP_TABLE.HARINGS_HASHER_KY)))
WHERE
	(HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?)
ORDER BY ((HARING_COUNT_TEMP_TABLE.HARING_COUNT / HASH_COUNT_TEMP_TABLE.HASH_COUNT) * 100) DESC");

DEFINE("LOWEST_HASH_ATTENDANCE_BY_HARE","SELECT
	HASHERS.HASHER_KY AS THE_KEY,
	HASHERS.HASHER_NAME AS NAME,
	MIN(TEMPTABLE.THE_COUNT) AS VALUE
FROM
	(((HASHERS
	JOIN HARINGS ON ((HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)))
	JOIN HASHES ON ((HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY)))
	JOIN
    (
		SELECT HASHINGS.HASH_KY AS THE_HASH_KEY,COUNT(0) AS THE_COUNT
		FROM
			HASHES
			JOIN HASHINGS ON ((HASHES.HASH_KY = HASHINGS.HASH_KY))
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASH_KY
	) TEMPTABLE ON ((HASHES.HASH_KY = TEMPTABLE.THE_HASH_KEY)))
GROUP BY HASHERS.HASHER_KY, HASHERS.HASHER_NAME
ORDER BY VALUE");

DEFINE("HIGHEST_HASH_ATTENDANCE_BY_HARE","SELECT
	HASHERS.HASHER_KY AS THE_KEY,
	HASHERS.HASHER_NAME AS NAME,
	MAX(TEMPTABLE.THE_COUNT) AS VALUE
FROM
	(((HASHERS
	JOIN HARINGS ON ((HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)))
	JOIN HASHES ON ((HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY)))
	JOIN
    (
		SELECT HASHINGS.HASH_KY AS THE_HASH_KEY,COUNT(0) AS THE_COUNT
		FROM
			HASHES
			JOIN HASHINGS ON ((HASHES.HASH_KY = HASHINGS.HASH_KY))
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASH_KY
	) TEMPTABLE ON ((HASHES.HASH_KY = TEMPTABLE.THE_HASH_KEY)))
GROUP BY HASHERS.HASHER_KY,HASHERS.HASHER_NAME
ORDER BY VALUE DESC");

DEFINE("AVERAGE_HASH_ATTENDANCE_BY_HARE","SELECT
	HASHERS.HASHER_KY AS THE_KEY,
	HASHERS.HASHER_NAME AS NAME,
	AVG(TEMPTABLE.THE_COUNT) AS VALUE
FROM
	(((HASHERS
	JOIN HARINGS ON ((HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)))
	JOIN HASHES ON ((HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY)))
	JOIN
    (
		SELECT HASHINGS.HASH_KY AS THE_HASH_KEY,COUNT(0) AS THE_COUNT
		FROM
			HASHES
			JOIN HASHINGS ON ((HASHES.HASH_KY = HASHINGS.HASH_KY))
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASH_KY
	) TEMPTABLE ON ((HASHES.HASH_KY = TEMPTABLE.THE_HASH_KEY)))
GROUP BY HASHERS.HASHER_KY, HASHERS.HASHER_NAME
ORDER BY VALUE DESC");

DEFINE("GRANDTOTAL_NONDISTINCT_HASH_ATTENDANCE_BY_HARE","SELECT
	HASHERS.HASHER_KY AS THE_KEY,
	HASHERS.HASHER_NAME AS NAME,
	SUM(TEMPTABLE.THE_COUNT) AS VALUE
FROM
	(((HASHERS
	JOIN HARINGS ON ((HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)))
	JOIN HASHES ON ((HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY)))
	JOIN
    (
		SELECT
			HASHINGS.HASH_KY AS THE_HASH_KEY,
			COUNT(0) AS THE_COUNT
		FROM
			HASHES
			JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASH_KY
	) TEMPTABLE ON HASHES.HASH_KY = TEMPTABLE.THE_HASH_KEY)
GROUP BY HASHERS.HASHER_KY,HASHERS.HASHER_NAME
ORDER BY VALUE DESC");

DEFINE ("GRANDTOTAL_DISTINCT_HASH_ATTENDANCE_BY_HARE","SELECT
	HASHERS.HASHER_KY AS THE_KEY,
	HASHERS.HASHER_NAME AS NAME,
	COUNT(DISTINCT HASHINGS.HASHER_KY) AS VALUE
FROM
	HASHERS
	JOIN HARINGS ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
	JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
	JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
WHERE HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_KY, HASHERS.HASHER_NAME
ORDER BY VALUE DESC");



DEFINE("PENDING_HARE_ANALVERSARIES","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	(COUNT(0) + ?) AS THE_COUNT_INCREMENTED,
	TIMESTAMPDIFF(YEAR,
		MAX(HASHES.EVENT_DATE),
		CURDATE()) AS YEARS_ABSENCE
FROM
	((HASHERS
	JOIN HARINGS ON ((HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)))
	JOIN HASHES ON ((HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY)))
WHERE HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_NAME
HAVING ((((THE_COUNT_INCREMENTED % 5) = 0)
	OR ((THE_COUNT_INCREMENTED % 69) = 0)
	OR ((THE_COUNT_INCREMENTED % 666) = 0)
	OR (((THE_COUNT_INCREMENTED - 69) % 100) = 0))
	AND (YEARS_ABSENCE < ?))
ORDER BY THE_COUNT_INCREMENTED DESC");

DEFINE('DH3_MUGLESS',
"SELECT HASHER_NAME, 
        HASHER_KEY,
        TOTAL_HASH_COUNT,
        NEXT_MILESTONE,
        CURDATE() + INTERVAL ROUND(DAYS_BETWEEN_HASHES * (NEXT_MILESTONE - TOTAL_HASH_COUNT)) DAY AS PREDICTED_MILESTONE_DATE
  FROM (
       SELECT HASHER_NAME, 
              OUTER_HASHER_KY AS HASHER_KEY,
              TOTAL_HASH_COUNT,
              ((DATEDIFF(CURDATE(),RECENT_FIRST_HASH.EVENT_DATE)) / RECENT_HASH_COUNT) AS DAYS_BETWEEN_HASHES,
              (SELECT MIN(MILESTONE) 
                 FROM (
		       SELECT THE_NUMBER AS MILESTONE FROM (
		           SELECT
			       @NUMBERX:=@NUMBERX+5 AS THE_NUMBER
		           FROM
			       (SELECT null FROM HASHINGS LIMIT 100) AS CART1,
			       (SELECT null FROM HASHINGS LIMIT 10) AS CART2,
			       (SELECT @NUMBERX:=100) NUMBERX
		       ) DERIVEDX) DERIVEDY
                WHERE MILESTONE > TOTAL_HASH_COUNT
                  AND KENNEL_KY=1987) AS NEXT_MILESTONE
         FROM (
  	      SELECT HASHERS.*,
  		     HASHERS.HASHER_KY AS OUTER_HASHER_KY, (
  			SELECT COUNT(*)
  			FROM HASHINGS JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  			WHERE HASHINGS.HASHER_KY = OUTER_HASHER_KY AND HASHES.KENNEL_KY = 1987
                        ) AS TOTAL_HASH_COUNT,
                (
  			SELECT COUNT(*)
  			FROM HASHINGS JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  			WHERE HASHINGS.HASHER_KY = OUTER_HASHER_KY AND HASHES.KENNEL_KY = 1987
                        AND HASHES.EVENT_DATE >= (CURDATE() - INTERVAL 18000 DAY)) AS RECENT_HASH_COUNT,
  		(
  			SELECT HASHES.HASH_KY
  			FROM HASHINGS JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  			WHERE HASHINGS.HASHER_KY = OUTER_HASHER_KY AND HASHES.KENNEL_KY = 1987
                        AND HASHES.EVENT_DATE >= (CURDATE() - INTERVAL 18000 DAY)
                        ORDER BY HASHES.EVENT_DATE ASC LIMIT 1) AS RECENT_FIRST_HASH_KEY
  	        FROM HASHERS
               WHERE DECEASED=0
                 AND HASHER_KY IN (SELECT HASHER_KY FROM DH3_MUGLESS)) AS MAIN_TABLE
         JOIN HASHES RECENT_FIRST_HASH 
           ON RECENT_FIRST_HASH.HASH_KY = RECENT_FIRST_HASH_KEY
        WHERE RECENT_HASH_COUNT > 1) AS OUTER1
 ORDER BY PREDICTED_MILESTONE_DATE");

DEFINE('PREDICTED_HASHER_ANALVERSARIES',
"SELECT HASHER_NAME,
        HASHER_KEY,
        TOTAL_HASH_COUNT,
        NEXT_MILESTONE,
        CURDATE() + INTERVAL ROUND(DAYS_BETWEEN_HASHES * (NEXT_MILESTONE - TOTAL_HASH_COUNT)) DAY AS PREDICTED_MILESTONE_DATE
  FROM (
       SELECT HASHER_NAME,
              OUTER_HASHER_KY AS HASHER_KEY,
              TOTAL_HASH_COUNT,
              ((DATEDIFF(CURDATE(),RECENT_FIRST_HASH.EVENT_DATE)) / RECENT_HASH_COUNT) AS DAYS_BETWEEN_HASHES,
              (SELECT MIN(MILESTONE)
                 FROM (SELECT 25 AS MILESTONE
                        UNION
                       SELECT 50
                        UNION
                       SELECT 69
                        UNION
		       SELECT THE_NUMBER FROM (
		           SELECT
			       @NUMBERX:=@NUMBERX+100 AS THE_NUMBER
		           FROM
			       (SELECT null FROM HASHINGS LIMIT 10) AS CART1,
			       (SELECT null FROM HASHINGS LIMIT 10) AS CART2,
			       (SELECT @NUMBERX:=0) NUMBERX
		       ) DERIVEDX) DERIVEDY
                WHERE MILESTONE > TOTAL_HASH_COUNT
                  AND KENNEL_KY=?) AS NEXT_MILESTONE
         FROM (
  	      SELECT HASHERS.*,
  		     HASHERS.HASHER_KY AS OUTER_HASHER_KY, (
  			SELECT COUNT(*)
  			FROM HASHINGS JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  			WHERE HASHINGS.HASHER_KY = OUTER_HASHER_KY AND HASHES.KENNEL_KY = ?
                        ) AS TOTAL_HASH_COUNT,
                (
  			SELECT COUNT(*)
  			FROM HASHINGS JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  			WHERE HASHINGS.HASHER_KY = OUTER_HASHER_KY AND HASHES.KENNEL_KY = ?
                        AND HASHES.EVENT_DATE >= (CURDATE() - INTERVAL ? DAY)) AS RECENT_HASH_COUNT,
  		(
  			SELECT HASHES.HASH_KY
  			FROM HASHINGS JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  			WHERE HASHINGS.HASHER_KY = OUTER_HASHER_KY AND HASHES.KENNEL_KY = ?
                        AND HASHES.EVENT_DATE >= (CURDATE() - INTERVAL ? DAY)
                        ORDER BY HASHES.EVENT_DATE ASC LIMIT 1) AS RECENT_FIRST_HASH_KEY
  	        FROM HASHERS) AS MAIN_TABLE
         JOIN HASHES RECENT_FIRST_HASH
           ON RECENT_FIRST_HASH.HASH_KY = RECENT_FIRST_HASH_KEY
        WHERE RECENT_HASH_COUNT > 1) AS OUTER1
 ORDER BY PREDICTED_MILESTONE_DATE");

DEFINE("PENDING_HASHER_ANALVERSARIES","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	(COUNT(0) + ?) AS THE_COUNT_INCREMENTED,
	TIMESTAMPDIFF(YEAR,
		MAX(HASHES.EVENT_DATE),
		CURDATE()) AS YEARS_ABSENCE
FROM
	((HASHERS
	JOIN HASHINGS ON ((HASHERS.HASHER_KY = HASHINGS.HASHER_KY)))
	JOIN HASHES ON ((HASHINGS.HASH_KY = HASHES.HASH_KY)))
WHERE
	(HASHERS.DECEASED = 0)
    AND HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_NAME
HAVING ((((THE_COUNT_INCREMENTED % 5) = 0)
	OR ((THE_COUNT_INCREMENTED % 69) = 0)
	OR ((THE_COUNT_INCREMENTED % 666) = 0)
	OR (((THE_COUNT_INCREMENTED - 69) % 100) = 0))
	AND (YEARS_ABSENCE < ?))
ORDER BY THE_COUNT_INCREMENTED DESC");


DEFINE("LONGEST_HASHING_CAREER_IN_DAYS","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	HASHERS.HASHER_KY AS HASHER_KY,
	HASH_COUNT_TEMP_TABLE.HASH_COUNT AS HASH_COUNT,
	FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE,
    FIRST_HASH_EVENT_TABLE.FIRST_HASH_KEY AS FIRST_HASH_KEY,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_DATE AS LATEST_HASH_DATE,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_KEY AS LATEST_HASH_KEY,
    DATEDIFF(LATEST_HASH_DATE,FIRST_HASH_DATE) DIFFERENCE,
    ((DATEDIFF(LATEST_HASH_DATE,FIRST_HASH_DATE)) / HASH_COUNT) AS DAYS_BETWEEN_HASHES
FROM
	((HASHERS
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
            MIN(HASHES.HASH_KY) AS FIRST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) FIRST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MAX(HASHES.EVENT_DATE) AS LATEST_HASH_DATE,
            MAX(HASHES.HASH_KY) AS LATEST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) LATEST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = LATEST_HASH_EVENT_TABLE.HASHER_KY))
WHERE
	(HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?)
ORDER BY XORDERCOLUMNX XUPORDOWNX");

DEFINE("HIGHEST_NUMBER_OF_DAYS_BETWEEN_HASHES","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	HASH_COUNT_TEMP_TABLE.HASH_COUNT AS HASH_COUNT,
	FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE,
    FIRST_HASH_EVENT_TABLE.FIRST_HASH_KEY AS FIRST_HASH_KEY,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_DATE AS LATEST_HASH_DATE,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_KEY AS LATEST_HASH_KEY,
    DATEDIFF(LATEST_HASH_DATE,FIRST_HASH_DATE) DIFFERENCE,
    ((DATEDIFF(LATEST_HASH_DATE,FIRST_HASH_DATE)) / HASH_COUNT) AS DAYS_BETWEEN_HASHES
FROM
	((HASHERS
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
            MIN(HASHES.HASH_KY) AS FIRST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) FIRST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MAX(HASHES.EVENT_DATE) AS LATEST_HASH_DATE,
            MAX(HASHES.HASH_KY) AS LATEST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) LATEST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = LATEST_HASH_EVENT_TABLE.HASHER_KY))
WHERE
	(HASH_COUNT_TEMP_TABLE.HASH_COUNT >= 1)
ORDER BY DAYS_BETWEEN_HASHES DESC");

DEFINE("LOWEST_NUMBER_OF_DAYS_BETWEEN_HASHES","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	HASH_COUNT_TEMP_TABLE.HASH_COUNT AS HASH_COUNT,
	FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE,
    FIRST_HASH_EVENT_TABLE.FIRST_HASH_KEY AS FIRST_HASH_KEY,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_DATE AS LATEST_HASH_DATE,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_KEY AS LATEST_HASH_KEY,
    DATEDIFF(LATEST_HASH_DATE,FIRST_HASH_DATE) DIFFERENCE,
    ((DATEDIFF(LATEST_HASH_DATE,FIRST_HASH_DATE)) / HASH_COUNT) AS DAYS_BETWEEN_HASHES
FROM
	((HASHERS
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
            MIN(HASHES.HASH_KY) AS FIRST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) FIRST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MAX(HASHES.EVENT_DATE) AS LATEST_HASH_DATE,
            MAX(HASHES.HASH_KY) AS LATEST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) LATEST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = LATEST_HASH_EVENT_TABLE.HASHER_KY))
WHERE
	(HASH_COUNT_TEMP_TABLE.HASH_COUNT >= 1)
ORDER BY DAYS_BETWEEN_HASHES ASC");

DEFINE("INDIVIDUAL_HASHING_CAREER_NUMBERS","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	HASH_COUNT_TEMP_TABLE.HASH_COUNT AS HASH_COUNT,
	FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE,
    FIRST_HASH_EVENT_TABLE.FIRST_HASH_KEY AS FIRST_HASH_KEY,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_DATE AS LATEST_HASH_DATE,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_KEY AS LATEST_HASH_KEY,
    DATEDIFF(LATEST_HASH_DATE,FIRST_HASH_DATE) DIFFERENCE,
    ((DATEDIFF(LATEST_HASH_DATE,FIRST_HASH_DATE)) / HASH_COUNT) AS DAYS_BETWEEN_HASHES
FROM
	((HASHERS
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
            MIN(HASHES.HASH_KY) AS FIRST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) FIRST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MAX(HASHES.EVENT_DATE) AS LATEST_HASH_DATE,
            MAX(HASHES.HASH_KY) AS LATEST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) LATEST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = LATEST_HASH_EVENT_TABLE.HASHER_KY))
WHERE
	(HASH_COUNT_TEMP_TABLE.HASH_COUNT >= 1)
    AND HASHERS.HASHER_KY = ?
ORDER BY DAYS_BETWEEN_HASHES ASC");

DEFINE("HIGHEST_NUMBER_OF_DAYS_BETWEEN_HARINGS","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	HARING_COUNT_TEMP_TABLE.HARING_COUNT AS HARING_COUNT,
	FIRST_HARING_EVENT_TABLE.FIRST_HARING_DATE AS FIRST_HARING_DATE,
    FIRST_HARING_EVENT_TABLE.FIRST_HARING_KEY AS FIRST_HARING_KEY,
    LATEST_HARING_EVENT_TABLE.LATEST_HARING_DATE AS LATEST_HARING_DATE,
    LATEST_HARING_EVENT_TABLE.LATEST_HARING_KEY AS LATEST_HARING_KEY,
    DATEDIFF(LATEST_HARING_DATE,FIRST_HARING_DATE) DIFFERENCE,
    ((DATEDIFF(LATEST_HARING_DATE,FIRST_HARING_DATE)) / HARING_COUNT) AS DAYS_BETWEEN_HARINGS
FROM
	((HASHERS
	JOIN (
		SELECT
			HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
			COUNT(HARINGS.HARINGS_HASHER_KY) AS HARING_COUNT
		FROM
			HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ? AND
            HASHES.IS_HYPER IN (?,?)
		GROUP BY HARINGS.HARINGS_HASHER_KY
        ) HARING_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HARING_COUNT_TEMP_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
			MIN(HASHES.EVENT_DATE) AS FIRST_HARING_DATE,
            MIN(HASHES.HASH_KY) AS FIRST_HARING_KEY
		FROM
			HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ? AND
            HASHES.IS_HYPER IN (?,?)
		GROUP BY HARINGS.HARINGS_HASHER_KY
        ) FIRST_HARING_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HARING_EVENT_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
			MAX(HASHES.EVENT_DATE) AS LATEST_HARING_DATE,
            MAX(HASHES.HASH_KY) AS LATEST_HARING_KEY
		FROM
			HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ? AND
            HASHES.IS_HYPER IN (?,?)
		GROUP BY HARINGS.HARINGS_HASHER_KY
        ) LATEST_HARING_EVENT_TABLE ON ((HASHERS.HASHER_KY = LATEST_HARING_EVENT_TABLE.HASHER_KY))
WHERE
	(HARING_COUNT_TEMP_TABLE.HARING_COUNT >= ?)
ORDER BY DAYS_BETWEEN_HARINGS DESC");


DEFINE("LOWEST_NUMBER_OF_DAYS_BETWEEN_HARINGS","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	HASHERS.HASHER_KY AS HASHER_KY,
	HARING_COUNT_TEMP_TABLE.HARING_COUNT AS HARING_COUNT,
	FIRST_HARING_EVENT_TABLE.FIRST_HARING_DATE AS FIRST_HARING_DATE,
    FIRST_HARING_EVENT_TABLE.FIRST_HARING_KEY AS FIRST_HARING_KEY,
    LATEST_HARING_EVENT_TABLE.LATEST_HARING_DATE AS LATEST_HARING_DATE,
    LATEST_HARING_EVENT_TABLE.LATEST_HARING_KEY AS LATEST_HARING_KEY,
    DATEDIFF(LATEST_HARING_DATE,FIRST_HARING_DATE) DIFFERENCE,
    ((DATEDIFF(LATEST_HARING_DATE,FIRST_HARING_DATE)) / HARING_COUNT) AS DAYS_BETWEEN_HARINGS
FROM
	((HASHERS
	JOIN (
		SELECT
			HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
			COUNT(HARINGS.HARINGS_HASHER_KY) AS HARING_COUNT
		FROM
			HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ? AND
            HASHES.IS_HYPER IN (?,?)
		GROUP BY HARINGS.HARINGS_HASHER_KY
        ) HARING_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HARING_COUNT_TEMP_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
			MIN(HASHES.EVENT_DATE) AS FIRST_HARING_DATE,
            MIN(HASHES.HASH_KY) AS FIRST_HARING_KEY
		FROM
			HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ? AND
            HASHES.IS_HYPER IN (?,?)
		GROUP BY HARINGS.HARINGS_HASHER_KY
        ) FIRST_HARING_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HARING_EVENT_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
			MAX(HASHES.EVENT_DATE) AS LATEST_HARING_DATE,
            MAX(HASHES.HASH_KY) AS LATEST_HARING_KEY
		FROM
			HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ? AND
            HASHES.IS_HYPER IN (?,?)
		GROUP BY HARINGS.HARINGS_HASHER_KY
        ) LATEST_HARING_EVENT_TABLE ON ((HASHERS.HASHER_KY = LATEST_HARING_EVENT_TABLE.HASHER_KY))
WHERE
	(HARING_COUNT_TEMP_TABLE.HARING_COUNT >= ?)
ORDER BY XORDERCOLUMNX XUPORDOWNX");

DEFINE("FASTEST_HASHERS_TO_ANALVERSARIES","SELECT
ANALVERSARYHASHES.HASHER_KY,
ANALVERSARYHASHES.HASHER_NAME,
INITIAL_HASHES.FIRST_HASH_KEY,
INITIAL_HASHES.FIRST_HASH_DATE,
ALL_HASHES.HASH_KY AS ANALVERSARY_HASH_KY,
ALL_HASHES.EVENT_DATE AS ANALVERSARY_DATE,
DATEDIFF(ALL_HASHES.EVENT_DATE,FIRST_HASH_DATE) DAYS_TO_REACH_ANALVERSARY
FROM (
	SELECT
		HASHERS.HASHER_KY,
		HASHERS.HASHER_NAME,
		(
			SELECT
				HASHES.HASH_KY
			FROM HASHES JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
			WHERE
				HASHINGS.HASHER_KY = OUTEREP.HASHER_KY
				AND HASHES.KENNEL_KY = ?
			ORDER BY HASHES.HASH_KY ASC
			LIMIT XLIMITX,1
		) AS ANALVERSARYHASH
	FROM HASHES
	JOIN HASHINGS OUTEREP ON HASHES.HASH_KY = OUTEREP.HASH_KY
	JOIN HASHERS ON OUTEREP.HASHER_KY = HASHERS.HASHER_KY
	GROUP BY HASHER_KY
	) ANALVERSARYHASHES
JOIN (
	SELECT
		HASHINGS.HASHER_KY AS HASHER_KY,
		MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
		MIN(HASHES.HASH_KY) AS FIRST_HASH_KEY
	FROM
		HASHINGS
		JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
	WHERE
		HASHES.KENNEL_KY = ?
	GROUP BY HASHINGS.HASHER_KY
    ) INITIAL_HASHES ON ANALVERSARYHASHES.HASHER_KY = INITIAL_HASHES.HASHER_KY
JOIN (SELECT * FROM HASHES) ALL_HASHES ON ANALVERSARYHASHES.ANALVERSARYHASH = ALL_HASHES.HASH_KY
ORDER BY DAYS_TO_REACH_ANALVERSARY XORDERX"
);


DEFINE("FASTEST_HASHERS_TO_ANALVERSARIES2","SELECT	ANALVERSARYHASHES.HASHER_KY,
		ANALVERSARYHASHES.HASHER_NAME,
		INITIAL_HASHES.FIRST_HASH_KY,
		INITIAL_HASHES.FIRST_HASH_DATE,
		HASHES.HASH_KY AS ANALVERSARY_HASH_KY,
		HASHES.EVENT_DATE AS ANALVERSARY_DATE,
		DATEDIFF(HASHES.EVENT_DATE,FIRST_HASH_DATE) AS DAYS_TO_REACH_ANALVERSARY
	FROM (SELECT	HASHERS.HASHER_KY,
					HASHERS.HASHER_NAME,
					(	SELECT HASHES.HASH_KY
						FROM HASHES
            			JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
						WHERE HASHINGS.HASHER_KY = HASHERS.HASHER_KY
								AND HASHES.KENNEL_KY = ?
						ORDER BY HASHES.EVENT_DATE ASC
						LIMIT XLIMITX,1
					) AS ANALVERSARYHASH
			FROM HASHERS
		) ANALVERSARYHASHES
	JOIN (SELECT	HASHINGS.HASHER_KY AS HASHER_KY,
					MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
					MIN(HASHES.HASH_KY) AS FIRST_HASH_KY
			FROM HASHINGS
			JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
			WHERE HASHES.KENNEL_KY = ?
			GROUP BY HASHINGS.HASHER_KY
		) INITIAL_HASHES ON ANALVERSARYHASHES.HASHER_KY = INITIAL_HASHES.HASHER_KY
	JOIN HASHES ON ANALVERSARYHASHES.ANALVERSARYHASH = HASHES.HASH_KY
        XWHERECLAUSEX
	GROUP BY HASHER_KY
	ORDER BY XORDERCOLUMNX XORDERX"
);

DEFINE("FASTEST_HARES_TO_ANALVERSARIES2","SELECT	ANALVERSARYHASHES.HASHER_KY,
		ANALVERSARYHASHES.HASHER_NAME,
		INITIAL_HASHES.FIRST_HASH_KY,
		INITIAL_HASHES.FIRST_HASH_DATE,
		HASHES.HASH_KY AS ANALVERSARY_HASH_KY,
		HASHES.EVENT_DATE AS ANALVERSARY_DATE,
		DATEDIFF(HASHES.EVENT_DATE,FIRST_HASH_DATE) AS DAYS_TO_REACH_ANALVERSARY
	FROM (SELECT	HASHERS.HASHER_KY,
					HASHERS.HASHER_NAME,
					(	SELECT HASHES.HASH_KY
						FROM HASHES
            			JOIN HARINGS ON HASHES.HASH_KY = HARINGS.HARINGS_HASH_KY
						WHERE HARINGS.HARINGS_HASHER_KY = HASHERS.HASHER_KY
								AND HASHES.KENNEL_KY = ?
                AND HASHES.IS_HYPER IN (?,?)
						ORDER BY HASHES.EVENT_DATE ASC
						LIMIT XLIMITX,1
					) AS ANALVERSARYHASH
			FROM HASHERS
		) ANALVERSARYHASHES
		JOIN (SELECT	HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
						MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
						MIN(HASHES.HASH_KY) AS FIRST_HASH_KY
				FROM HARINGS
				JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
				WHERE HASHES.KENNEL_KY = ? AND HASHES.IS_HYPER IN (?,?)
				GROUP BY HARINGS.HARINGS_HASHER_KY
		) INITIAL_HASHES ON ANALVERSARYHASHES.HASHER_KY = INITIAL_HASHES.HASHER_KY
	JOIN HASHES ON ANALVERSARYHASHES.ANALVERSARYHASH = HASHES.HASH_KY
	GROUP BY HASHER_KY
	ORDER BY XORDERCOLUMNX XORDERX"
);

DEFINE("HASH_EVENTS_WITH_COUNTS","SELECT *, DAYNAME(EVENT_DATE) AS EVENT_DAY_NAME FROM HASHES JOIN (
	SELECT HASHES.HASH_KY AS THE_HASH_KEY, COUNT(*) AS THE_COUNT
	FROM HASHINGS JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
	WHERE KENNEL_KY = ?
	GROUP BY HASHES.HASH_KY
) AS THE_TEMPORARY_TABLE ON HASHES.HASH_KY = THE_TEMPORARY_TABLE.THE_HASH_KEY
ORDER BY THE_COUNT XUPORDOWNX
LIMIT XLIMITX");


DEFINE("BACKSLIDERS_FOR_SPECIFIC_HASH_EVENT","SELECT
	HASHERS.HASHER_KY,
	HASHERS.HASHER_NAME,
	LATEST_HASH_TABLE.HASH_KY AS CURRENT_HASH_KY,
  HASHES.EVENT_DATE AS CURRENT_EVENT_DATE,
  LATEST_HASH_TABLE.LATEST_HASH_KEY AS PREVIOUS_HASH_KEY,
  LH.EVENT_DATE AS PREVIOUS_EVENT_DATE,
  LH.KENNEL_EVENT_NUMBER AS PREVIOUS_EVENT_NUMBER,
	(
		SELECT
			COUNT(*)
		FROM
			HASHES
		WHERE
			HASHES.EVENT_DATE > PREVIOUS_EVENT_DATE AND
						HASHES.EVENT_DATE < CURRENT_EVENT_DATE AND
						HASHES.KENNEL_KY = ?
	) AS THE_NUMBER_OF_MISSED_HASHES,
  DATEDIFF(HASHES.EVENT_DATE,LH.EVENT_DATE) AS DAYS_SINCE_LAST_EVENT
FROM
	(
		SELECT
			HASHERS.HASHER_KY,
			HASHES_OUTER.HASH_KY,
			(
				SELECT
					HASHES.HASH_KY
				FROM
					HASHES JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
				WHERE
					HASHINGS.HASHER_KY = HASHINGS_OUTER.HASHER_KY AND
					HASHES.EVENT_DATE < HASHES_OUTER.EVENT_DATE AND
					HASHES.KENNEL_KY = HASHES_OUTER.KENNEL_KY
				ORDER BY HASHES.EVENT_DATE DESC
				LIMIT 0,1
			) AS LATEST_HASH_KEY
		FROM
			HASHES HASHES_OUTER
			JOIN HASHINGS HASHINGS_OUTER ON HASHES_OUTER.HASH_KY = HASHINGS_OUTER.HASH_KY
			JOIN HASHERS ON HASHINGS_OUTER.HASHER_KY = HASHERS.HASHER_KY
		WHERE
			HASHES_OUTER.HASH_KY = ?
			AND KENNEL_KY = ?
	) LATEST_HASH_TABLE
    JOIN HASHERS ON LATEST_HASH_TABLE.HASHER_KY = HASHERS.HASHER_KY
    JOIN HASHINGS ON HASHERS.HASHER_KY = HASHINGS.HASHER_KY
    JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
    LEFT JOIN HASHES LH ON LATEST_HASH_TABLE.LATEST_HASH_KEY = LH.HASH_KY
WHERE
	HASHES.HASH_KY = ?
ORDER BY DAYS_SINCE_LAST_EVENT DESC
");

DEFINE("NEWCOMERS_BY_YEAR","SELECT DATE_FORMAT(FIRST_HASH_DATE,'%Y') AS THE_VALUE, COUNT(*) AS THE_COUNT FROM (
	SELECT
		HASHERS.HASHER_NAME AS HASHER_NAME,
		HASHERS.HASHER_KY AS HASHER_KY,
		FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE,
		FIRST_HASH_EVENT_TABLE.FIRST_HASH_KEY AS FIRST_HASH_KEY
	FROM
		((HASHERS
		JOIN (
			SELECT
				HASHINGS.HASHER_KY AS HASHER_KY,
				COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
			FROM
				HASHINGS
				JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
			WHERE
				HASHES.KENNEL_KY = ?
			GROUP BY HASHINGS.HASHER_KY
			) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
		JOIN (
			SELECT
				HASHINGS.HASHER_KY AS HASHER_KY,
				MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
				MIN(HASHES.HASH_KY) AS FIRST_HASH_KEY
			FROM
				HASHINGS
				JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
			WHERE
				HASHES.KENNEL_KY = ?
			GROUP BY HASHINGS.HASHER_KY
			) FIRST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY)))
	WHERE
		(HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?)
	ORDER BY FIRST_HASH_DATE ASC
) TEMP2
GROUP BY DATE_FORMAT(FIRST_HASH_DATE,'%Y')
ORDER BY DATE_FORMAT(FIRST_HASH_DATE,'%Y') ASC
");

DEFINE("NEW_HASHERS_FOR_THIS_YEAR","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	HASHERS.HASHER_KY AS HASHER_KY,
	FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE,
	FIRST_HASH_EVENT_TABLE.FIRST_HASH_KEY AS FIRST_HASH_KEY,
    (
		SELECT COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HASHES ON HASHES.HASH_KY = HARINGS.HARINGS_HASH_KY
        WHERE
			HARINGS_HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY
            AND HASHES.KENNEL_KY = HASH_COUNT_TEMP_TABLE.KENNEL_KY) AS OVERALL_HARING_COUNT,
    (
		SELECT COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HASHES ON HASHES.HASH_KY = HARINGS.HARINGS_HASH_KY
        WHERE
			HARINGS_HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY
            AND HASHES.KENNEL_KY = HASH_COUNT_TEMP_TABLE.KENNEL_KY
            AND HASHES.IS_HYPER = 1) AS HYPER_HARING_COUNT,
    (
		SELECT COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HASHES ON HASHES.HASH_KY = HARINGS.HARINGS_HASH_KY
        WHERE
			HARINGS_HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY
            AND HASHES.KENNEL_KY = HASH_COUNT_TEMP_TABLE.KENNEL_KY
            AND HASHES.IS_HYPER = 0) AS TRUE_HARING_COUNT,
    (
		SELECT COUNT(*) AS THE_COUNT
        FROM HASHINGS
        JOIN HASHES ON HASHES.HASH_KY = HASHINGS.HASH_KY
        WHERE
			HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY
            AND HASHES.KENNEL_KY = HASH_COUNT_TEMP_TABLE.KENNEL_KY ) AS THE_COUNT
FROM
	((HASHERS
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT,
            HASHES.KENNEL_KY AS KENNEL_KY
		FROM
			HASHINGS
			JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
		) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
			MIN(HASHES.HASH_KY) AS FIRST_HASH_KEY
		FROM
			HASHINGS
			JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
		) FIRST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY)))
WHERE
	(HASH_COUNT_TEMP_TABLE.HASH_COUNT >= 0)
	AND DATE_FORMAT(FIRST_HASH_DATE,'%Y') = ?
ORDER BY THE_COUNT DESC");

DEFINE("NEW_HARES_FOR_THIS_YEAR","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	HASHERS.HASHER_KY AS HASHER_KY,
	FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE,
	FIRST_HASH_EVENT_TABLE.FIRST_HASH_KEY AS FIRST_HASH_KEY,
  (
		SELECT COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HASHES ON HASHES.HASH_KY = HARINGS.HARINGS_HASH_KY
        WHERE
			HARINGS_HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY
            AND HASHES.KENNEL_KY = HASH_COUNT_TEMP_TABLE.KENNEL_KY
            AND HASHES.IS_HYPER IN (?,?)) AS THE_COUNT
FROM
	((HASHERS
	JOIN (
		SELECT
			HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
			COUNT(HARINGS.HARINGS_HASHER_KY) AS HASH_COUNT,
            HASHES.KENNEL_KY AS KENNEL_KY
		FROM
			HARINGS
			JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
            AND HASHES.IS_HYPER IN (?,?)
		GROUP BY HARINGS.HARINGS_HASHER_KY
		) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
			MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
			MIN(HASHES.HASH_KY) AS FIRST_HASH_KEY
		FROM
			HARINGS
			JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
            AND HASHES.IS_HYPER IN (?,?)
		GROUP BY HARINGS.HARINGS_HASHER_KY
		) FIRST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY)))
WHERE
	(HASH_COUNT_TEMP_TABLE.HASH_COUNT >= 1)
	AND DATE_FORMAT(FIRST_HASH_DATE,'%Y') = ?
ORDER BY THE_COUNT DESC");

DEFINE("NEWCOMERS_BY_MONTH","SELECT MONTH(FIRST_HASH_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT FROM (
	SELECT
		HASHERS.HASHER_NAME AS HASHER_NAME,
		HASHERS.HASHER_KY AS HASHER_KY,
		FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE,
		FIRST_HASH_EVENT_TABLE.FIRST_HASH_KEY AS FIRST_HASH_KEY
	FROM
		((HASHERS
		JOIN (
			SELECT
				HASHINGS.HASHER_KY AS HASHER_KY,
				COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
			FROM
				HASHINGS
				JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
			WHERE
				HASHES.KENNEL_KY = ?
			GROUP BY HASHINGS.HASHER_KY
			) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
		JOIN (
			SELECT
				HASHINGS.HASHER_KY AS HASHER_KY,
				MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
				MIN(HASHES.HASH_KY) AS FIRST_HASH_KEY
			FROM
				HASHINGS
				JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
			WHERE
				HASHES.KENNEL_KY = ?
			GROUP BY HASHINGS.HASHER_KY
			) FIRST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY)))
	WHERE
		(HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?)
	ORDER BY FIRST_HASH_DATE ASC
) TEMP2
GROUP BY MONTH(FIRST_HASH_DATE)
ORDER BY MONTH(FIRST_HASH_DATE) ASC");

DEFINE("NEWCOMERS_BY_YEAR_QUARTER","SELECT CONCAT_WS('/',YEAR(FIRST_HASH_DATE),QUARTER(FIRST_HASH_DATE)) AS THE_VALUE, COUNT(*) AS THE_COUNT FROM (
	SELECT
		HASHERS.HASHER_NAME AS HASHER_NAME,
		HASHERS.HASHER_KY AS HASHER_KY,
		FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE,
		FIRST_HASH_EVENT_TABLE.FIRST_HASH_KEY AS FIRST_HASH_KEY
	FROM
		((HASHERS
		JOIN (
			SELECT
				HASHINGS.HASHER_KY AS HASHER_KY,
				COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
			FROM
				HASHINGS
				JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
			WHERE
				HASHES.KENNEL_KY = ?
			GROUP BY HASHINGS.HASHER_KY
			) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
		JOIN (
			SELECT
				HASHINGS.HASHER_KY AS HASHER_KY,
				MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
				MIN(HASHES.HASH_KY) AS FIRST_HASH_KEY
			FROM
				HASHINGS
				JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
			WHERE
				HASHES.KENNEL_KY = ?
			GROUP BY HASHINGS.HASHER_KY
			) FIRST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY)))
	WHERE
		(HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?)
	ORDER BY FIRST_HASH_DATE ASC
) TEMP2
GROUP BY CONCAT_WS('/',YEAR(FIRST_HASH_DATE),QUARTER(FIRST_HASH_DATE))
ORDER BY CONCAT_WS('/',YEAR(FIRST_HASH_DATE),QUARTER(FIRST_HASH_DATE)) ASC");

DEFINE("NEWCOMERS_BY_YEAR_MONTH","SELECT DATE_FORMAT(FIRST_HASH_DATE,'%Y/%m') AS THE_VALUE, COUNT(*) AS THE_COUNT FROM (
	SELECT
		HASHERS.HASHER_NAME AS HASHER_NAME,
		HASHERS.HASHER_KY AS HASHER_KY,
		FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE,
		FIRST_HASH_EVENT_TABLE.FIRST_HASH_KEY AS FIRST_HASH_KEY
	FROM
		((HASHERS
		JOIN (
			SELECT
				HASHINGS.HASHER_KY AS HASHER_KY,
				COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
			FROM
				HASHINGS
				JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
			WHERE
				HASHES.KENNEL_KY = ?
			GROUP BY HASHINGS.HASHER_KY
			) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
		JOIN (
			SELECT
				HASHINGS.HASHER_KY AS HASHER_KY,
				MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
				MIN(HASHES.HASH_KY) AS FIRST_HASH_KEY
			FROM
				HASHINGS
				JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
			WHERE
				HASHES.KENNEL_KY = ?
			GROUP BY HASHINGS.HASHER_KY
			) FIRST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY)))
	WHERE
		(HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?)
	ORDER BY FIRST_HASH_DATE ASC
) TEMP2
GROUP BY DATE_FORMAT(FIRST_HASH_DATE,'%Y/%m')
ORDER BY DATE_FORMAT(FIRST_HASH_DATE,'%Y/%m') ASC");

DEFINE("DEPARTERS_BY_YEAR_MONTH","SELECT DATE_FORMAT(LATEST_HASH_DATE,'%Y/%m') AS THE_VALUE, COUNT(*) AS THE_COUNT FROM (
SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	HASHERS.HASHER_KY AS HASHER_KY,
	HASH_COUNT_TEMP_TABLE.HASH_COUNT AS HASH_COUNT,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_DATE AS LATEST_HASH_DATE,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_KEY AS LATEST_HASH_KEY
FROM
	((HASHERS
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MAX(HASHES.EVENT_DATE) AS LATEST_HASH_DATE,
            MAX(HASHES.HASH_KY) AS LATEST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) LATEST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = LATEST_HASH_EVENT_TABLE.HASHER_KY)))
WHERE
	HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?
    AND LATEST_HASH_DATE < CURDATE() - INTERVAL ? MONTH
) TEMP2
GROUP BY DATE_FORMAT(LATEST_HASH_DATE,'%Y/%m')
ORDER BY DATE_FORMAT(LATEST_HASH_DATE,'%Y/%m') ASC");


DEFINE("DEPARTERS_BY_YEAR","SELECT DATE_FORMAT(LATEST_HASH_DATE,'%Y') AS THE_VALUE, COUNT(*) AS THE_COUNT FROM (
SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	HASHERS.HASHER_KY AS HASHER_KY,
	HASH_COUNT_TEMP_TABLE.HASH_COUNT AS HASH_COUNT,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_DATE AS LATEST_HASH_DATE,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_KEY AS LATEST_HASH_KEY
FROM
	((HASHERS
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MAX(HASHES.EVENT_DATE) AS LATEST_HASH_DATE,
            MAX(HASHES.HASH_KY) AS LATEST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) LATEST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = LATEST_HASH_EVENT_TABLE.HASHER_KY)))
WHERE
	HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?
    AND LATEST_HASH_DATE < CURDATE() - INTERVAL ? MONTH
) TEMP2
GROUP BY DATE_FORMAT(LATEST_HASH_DATE,'%Y')
ORDER BY DATE_FORMAT(LATEST_HASH_DATE,'%Y') ASC");

DEFINE("DEPARTERS_BY_YEAR_QUARTER","SELECT CONCAT_WS('/',YEAR(LATEST_HASH_DATE),QUARTER(LATEST_HASH_DATE)) AS THE_VALUE, COUNT(*) AS THE_COUNT FROM (
SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	HASHERS.HASHER_KY AS HASHER_KY,
	HASH_COUNT_TEMP_TABLE.HASH_COUNT AS HASH_COUNT,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_DATE AS LATEST_HASH_DATE,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_KEY AS LATEST_HASH_KEY
FROM
	((HASHERS
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MAX(HASHES.EVENT_DATE) AS LATEST_HASH_DATE,
            MAX(HASHES.HASH_KY) AS LATEST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) LATEST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = LATEST_HASH_EVENT_TABLE.HASHER_KY)))
WHERE
	HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?
    AND LATEST_HASH_DATE < CURDATE() - INTERVAL ? MONTH
) TEMP2
GROUP BY CONCAT_WS('/',YEAR(LATEST_HASH_DATE),QUARTER(LATEST_HASH_DATE))
ORDER BY CONCAT_WS('/',YEAR(LATEST_HASH_DATE),QUARTER(LATEST_HASH_DATE)) ASC");

DEFINE("DEPARTERS_BY_MONTH","SELECT DATE_FORMAT(LATEST_HASH_DATE,'%m') AS THE_VALUE, COUNT(*) AS THE_COUNT FROM (
SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	HASHERS.HASHER_KY AS HASHER_KY,
	HASH_COUNT_TEMP_TABLE.HASH_COUNT AS HASH_COUNT,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_DATE AS LATEST_HASH_DATE,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_KEY AS LATEST_HASH_KEY
FROM
	((HASHERS
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MAX(HASHES.EVENT_DATE) AS LATEST_HASH_DATE,
            MAX(HASHES.HASH_KY) AS LATEST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) LATEST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = LATEST_HASH_EVENT_TABLE.HASHER_KY)))
WHERE
	HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?
    AND LATEST_HASH_DATE < CURDATE() - INTERVAL ? MONTH
) TEMP2
GROUP BY DATE_FORMAT(LATEST_HASH_DATE,'%m')
ORDER BY DATE_FORMAT(LATEST_HASH_DATE,'%m') ASC");

DEFINE("INDIVIDUAL_HASHER_ATTENDANCE_RECORD","SELECT
	CASE
		WHEN TENDERS.HASH_KY IS NULL THEN 'NO'
        ELSE 'YES'
	END AS ATTENDED,
    HASHES.* FROM (
		SELECT HASHINGS.HASH_KY, HASHES.EVENT_DATE
		FROM HASHINGS JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE HASHES.KENNEL_KY = ? AND HASHINGS.HASHER_KY = ?
) AS TENDERS RIGHT JOIN HASHES ON TENDERS.HASH_KY = HASHES.HASH_KY
WHERE HASHES.KENNEL_KY = ?
ORDER BY EVENT_DATE DESC");

DEFINE("EVENTS_LAST_MISSED_FOR_EACH_HASHER","SELECT
			S.HASHER_KY,
    	S.HASHER_NAME,
    	MAX(E.EVENT_DATE) AS LAST_MISSED_DATE
	FROM (
		SELECT
			HASHINGS.HASHER_KY,
      HASHINGS.HASH_KY,
      HASHES.EVENT_DATE,
      HASHES.KENNEL_KY,
      HASHERS.HASHER_NAME
		FROM HASHINGS
      JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
      JOIN HASHERS ON HASHINGS.HASHER_KY = HASHERS.HASHER_KY
		WHERE HASHINGS.HASH_KY = ?
		) S
		CROSS JOIN HASHES E
		LEFT JOIN HASHINGS H ON S.HASHER_KY = H.HASHER_KY AND E.HASH_KY = H.HASH_KY
		WHERE
			H.HASHER_KY IS NULL
    	AND E.KENNEL_KY = S.KENNEL_KY
    	AND E.EVENT_DATE < S.EVENT_DATE
		GROUP BY S.HASHER_KY
		ORDER BY LAST_MISSED_DATE ASC");


	DEFINE("EVENTS_MISSED_COUNT_FOR_EACH_HASHER","SELECT
			L.HASHER_KY,
		    HR.HASHER_NAME,
		    COUNT(*) AS THE_COUNT
		FROM (
				SELECT
					S.HASHER_KY,
					MAX(E.EVENT_DATE) AS LAST_MISSED_DATE
				FROM (
					SELECT
						HASHINGS.HASHER_KY,
		                HASHES.EVENT_DATE,
		                HASHES.KENNEL_KY
					FROM HASHINGS JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
					WHERE HASHINGS.HASH_KY = ?
				) S
				CROSS JOIN HASHES E
				LEFT JOIN HASHINGS H ON S.HASHER_KY = H.HASHER_KY AND E.HASH_KY = H.HASH_KY
				WHERE
					H.HASHER_KY IS NULL

					AND E.KENNEL_KY = S.KENNEL_KY
					AND E.EVENT_DATE < S.EVENT_DATE
				GROUP BY S.HASHER_KY
			) L
			JOIN HASHINGS H ON L.HASHER_KY = H.HASHER_KY
			JOIN HASHES HA on H.HASH_KY = HA.HASH_KY
				AND HA.KENNEL_KY = ?
		    AND L.LAST_MISSED_DATE < HA.EVENT_DATE
		    AND H.HASH_KY <= ?
		    JOIN HASHERS HR ON H.HASHER_KY = HR.HASHER_KY
		GROUP BY L.HASHER_KY
		ORDER BY THE_COUNT DESC
");

DEFINE("STREAKERS_LIST","SELECT
	THE_HASHER_KY,
    THE_HASHER_NAME,
    IF(LAST_MISSED_HASH_DATE IS NULL,TOTAL_ACTUAL_SO_FAR,
		(
			SELECT
				COUNT(*)
			FROM
				HASHES
            WHERE
				EVENT_DATE > LAST_MISSED_HASH_DATE
                AND EVENT_DATE <= THIS_HASHES_DATE
                AND KENNEL_KY = THIS_KENNEL_KY)
        ) AS THE_STREAK_IN_EVENTS,
    IF(LAST_MISSED_HASH_DATE IS NULL,'NA', DATE_FORMAT(LAST_MISSED_HASH_DATE,'%Y/%m/%d'))
         AS LAST_MISSED_EVENT  ,
    IF(LAST_MISSED_HASH_DATE IS NULL,'Infinity',DATEDIFF(THIS_HASHES_DATE,LAST_MISSED_HASH_DATE)) AS THE_STREAK_IN_DAYS
FROM
(
	SELECT
		HASHERSX.HASHER_KY AS THE_HASHER_KY,
        HASHERSX.HASHER_NAME AS THE_HASHER_NAME,
        HASHES1.EVENT_DATE AS THIS_HASHES_DATE,
        HASHES1.KENNEL_KY AS THIS_KENNEL_KY,
		(
			SELECT COUNT(*)
			FROM
				HASHINGS
				JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
			WHERE
				HASHES.EVENT_DATE <= HASHES1.EVENT_DATE
				AND HASHES.KENNEL_KY = HASHES1.KENNEL_KY
				AND HASHINGS.HASHER_KY = HASHERSX.HASHER_KY

		) AS TOTAL_ACTUAL_SO_FAR,
		(
			SELECT
				MAX(HASHES.EVENT_DATE)
			FROM
				HASHERS AS HASHERSY
				CROSS JOIN HASHES
				LEFT JOIN HASHINGS on HASHERSY.HASHER_KY = HASHINGS.HASHER_KY AND HASHES.HASH_KY = HASHINGS.HASH_KY
			WHERE
				HASHERSY.HASHER_KY = HASHERSX.HASHER_KY
				AND HASHINGS.HASHER_KY IS NULL
				AND HASHES.KENNEL_KY = HASHES1.KENNEL_KY
				AND HASHES.HASH_KY < HASHES1.HASH_KY
		) LAST_MISSED_HASH_DATE
	FROM
		HASHERS HASHERSX
		JOIN HASHINGS ON HASHERSX.HASHER_KY = HASHINGS.HASHER_KY
		JOIN HASHES HASHES1 ON HASHINGS.HASH_KY = HASHES1.HASH_KY
	WHERE
		HASHES1.HASH_KY = ?
		AND HASHES1.KENNEL_KY = ?
) DERIVED_TABLE_NAME
ORDER BY THE_STREAK_IN_EVENTS DESC");

DEFINE("HASHER_ATTENDANCE_RECORD_LIST","SELECT
	CASE
		WHEN TENDERS.HASH_KY IS NULL THEN 'NO'
        ELSE 'YES'
	END AS ATTENDED,
    HASHES.* FROM (
		SELECT HASHINGS.HASH_KY, HASHES.EVENT_DATE
		FROM HASHINGS JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE HASHES.KENNEL_KY = ? AND HASHINGS.HASHER_KY = ?
) AS TENDERS RIGHT JOIN HASHES ON TENDERS.HASH_KY = HASHES.HASH_KY
WHERE HASHES.KENNEL_KY = ?
ORDER BY EVENT_DATE DESC");

DEFINE("PERSONS_HASHING_COUNT","SELECT COUNT(*) AS THE_COUNT FROM HASHINGS JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
	WHERE HASHER_KY = ? AND KENNEL_KY = ?");

DEFINE("PERSONS_HARING_COUNT_FLEXIBLE","SELECT COUNT(*) AS THE_COUNT FROM HARINGS JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
	WHERE HARINGS_HASHER_KY = ? AND HASHES.KENNEL_KY = ? AND HASHES.IS_HYPER IN (?,?)");


DEFINE("HOUND_COUNT_BY_HASH_KEY","SELECT COUNT(*) AS THE_COUNT FROM HASHERS JOIN HASHINGS ON HASHERS.HASHER_KY = HASHINGS.HASHER_KY WHERE HASHINGS.HASH_KY = ?");
DEFINE("HARE_COUNT_BY_HASH_KEY","SELECT COUNT(*) AS THE_COUNT FROM HASHERS JOIN HARINGS ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY WHERE HARINGS.HARINGS_HASH_KY = ?");

DEFINE("THE_LONGEST_STREAKS","SELECT
				MAX_STREAK AS VALUE, HASHERS.HASHER_NAME AS NAME, HASHERS.HASHER_KY AS THE_KEY
		FROM
				(SELECT
						MAX(RUNNING_COUNT) AS MAX_STREAK, HASHER_KY
				FROM
						(SELECT
						RUNNING_COUNT, HASHER_KY
				FROM
						(SELECT
						@RUNNING_COUNT:=CASE
										WHEN PREV_HASHER != HASHER_KY THEN 1
										WHEN PREV_HASHNUM != HASHNUM - 1 THEN 1
										ELSE @RUNNING_COUNT + 1
								END AS RUNNING_COUNT,
								PREV_HASHNUM,
								PREV_HASHER,
								HASHNUM,
								HASH_KY,
								HASHER_KY
				FROM
						(SELECT
						@PREV_HASHNUM AS PREV_HASHNUM,
								@PREV_HASHER AS PREV_HASHER,
								HASHNUM,
								HASH_KY,
								HASHER_KY,
								@PREV_HASHNUM:=HASHNUM,
								@PREV_HASHER:=HASHER_KY
				FROM
						(SELECT
						HASHES2.HASHNUM, HASHES2.HASH_KY, HASHINGS.HASHER_KY
				FROM
						(SELECT
						@rownum:=@rownum + 1 AS HASHNUM, HASH_KY
				FROM
						(SELECT
						HASHES.HASH_KY
				FROM
						HASHES, (SELECT @PREV_HASHNUM:=- 1) v1, (SELECT @PREV_HASHER:=- 1) v2, (SELECT @rownum:=0) v3, (SELECT @RUNNING_COUNT:=0) v4
				WHERE
						HASHES.KENNEL_KY = ?
				ORDER BY HASHES.EVENT_DATE , HASHES.HASH_KY) AS A) AS HASHES2
				JOIN HASHINGS ON HASHINGS.HASH_KY = HASHES2.HASH_KY
				ORDER BY HASHINGS.HASHER_KY , HASHES2.HASHNUM) AS B) AS C) AS D) AS E
				GROUP BY HASHER_KY) AS HASHER_STREAK_COUNTS
						JOIN
				HASHERS ON HASHERS.HASHER_KY = HASHER_STREAK_COUNTS.HASHER_KY
		ORDER BY MAX_STREAK DESC , HASHER_NAME
		Limit 25");

		DEFINE("THE_LONGEST_STREAKS_FOR_HASHER","SELECT
				MAX(RUNNING_COUNT) AS MAX_STREAK,
				HASHER_KY
			FROM
			(
				SELECT
					RUNNING_COUNT,
					HASHER_KY
				FROM
				(
					SELECT
						@RUNNING_COUNT:=CASE
							WHEN PREV_HASHER != HASHER_KY THEN 1
							WHEN PREV_HASHNUM != HASHNUM - 1 THEN 1
							ELSE @RUNNING_COUNT + 1
							END AS RUNNING_COUNT,
						PREV_HASHNUM,
						PREV_HASHER,
						HASHNUM,
						HASH_KY,
						HASHER_KY
					FROM
					(
						SELECT
							@PREV_HASHNUM AS PREV_HASHNUM,
							@PREV_HASHER AS PREV_HASHER,
							HASHNUM,
							HASH_KY,
							HASHER_KY,
							@PREV_HASHNUM:=HASHNUM,
							@PREV_HASHER:=HASHER_KY
						FROM
						(
							SELECT
								HASHES2.HASHNUM,
								HASHES2.HASH_KY,
								HASHINGS.HASHER_KY
							FROM
							(
								SELECT
									@rownum:=@rownum + 1 AS HASHNUM,
									HASH_KY
								FROM
								(
									SELECT
										HASHES.HASH_KY
									FROM
										HASHES,
										(SELECT @PREV_HASHNUM:=- 1) v1,
										(SELECT @PREV_HASHER:=- 1) v2,
										(SELECT @rownum:=0) v3,
										(SELECT @RUNNING_COUNT:=0) v4
									WHERE
										HASHES.KENNEL_KY = ?
									ORDER BY HASHES.EVENT_DATE , HASHES.HASH_KY
								) AS A
							) AS HASHES2
						JOIN HASHINGS ON HASHINGS.HASH_KY = HASHES2.HASH_KY
						ORDER BY HASHINGS.HASHER_KY , HASHES2.HASHNUM
					) AS B
				) AS C
			) AS D
			) AS E
			WHERE HASHER_KY = ?");

DEFINE("ALL_HASHINGS_IN_ALL_KENNELS_FOR_HASHER","SELECT
	KENNELS.KENNEL_ABBREVIATION,
    HASHES.KENNEL_EVENT_NUMBER,
        HASHES.HASH_KY
FROM
	HASHINGS JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
    JOIN KENNELS ON HASHES.KENNEL_KY = KENNELS.KENNEL_KY
WHERE
	HASHINGS.HASHER_KY = ?
ORDER BY KENNEL_ABBREVIATION, HASHES.EVENT_DATE DESC");

DEFINE("ALL_HARINGS_IN_ALL_KENNELS_FOR_HASHER","SELECT
	KENNELS.KENNEL_ABBREVIATION,
    HASHES.KENNEL_EVENT_NUMBER,
    HASHES.HASH_KY
FROM
	HARINGS JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
    JOIN KENNELS ON HASHES.KENNEL_KY = KENNELS.KENNEL_KY
WHERE
	HARINGS_HASHER_KY = ?
ORDER BY KENNEL_ABBREVIATION, HASHES.EVENT_DATE DESC");

DEFINE("HOUND_ANALVERSARIES_FOR_EVENT","SELECT
		HASHERS.HASHER_NAME AS HASHER_NAME,
		(COUNT(*)) AS THE_COUNT,
		MAX(HASHINGS.HASH_KY) AS MAX_HASH_KY
FROM
		((HASHERS
		JOIN HASHINGS ON ((HASHERS.HASHER_KY = HASHINGS.HASHER_KY)))
		JOIN HASHES ON ((HASHINGS.HASH_KY = HASHES.HASH_KY)))
WHERE
		(HASHERS.DECEASED = 0) AND
		HASHES.HASH_KY <= ? AND
		HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_NAME
HAVING ((((THE_COUNT % 5) = 0)
		OR ((THE_COUNT % 69) = 0)
		OR ((THE_COUNT % 666) = 0)
		OR (((THE_COUNT - 69) % 100) = 0)))
		AND MAX_HASH_KY = ?
ORDER BY THE_COUNT DESC");

DEFINE("OVERALL_HARE_ANALVERSARIES_FOR_EVENT","SELECT
		HASHERS.HASHER_NAME AS HASHER_NAME,
		(COUNT(*)) AS THE_COUNT,
		MAX(HARINGS.HARINGS_HASH_KY) AS MAX_HASH_KY
FROM
		((HASHERS
		JOIN HARINGS ON ((HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)))
		JOIN HASHES ON ((HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY)))
WHERE
		(HASHERS.DECEASED = 0) AND
		HASHES.HASH_KY <= ? AND
		HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_NAME
HAVING ((((THE_COUNT % 5) = 0)
		OR ((THE_COUNT % 69) = 0)
		OR ((THE_COUNT % 666) = 0)
		OR (((THE_COUNT - 69) % 100) = 0)))
		AND MAX_HASH_KY = ?
ORDER BY THE_COUNT DESC");

DEFINE("TRUE_HARE_ANALVERSARIES_FOR_EVENT","SELECT
		HASHERS.HASHER_NAME AS HASHER_NAME,
		(COUNT(*)) AS THE_COUNT,
		MAX(HARINGS.HARINGS_HASH_KY) AS MAX_HASH_KY
FROM
		((HASHERS
		JOIN HARINGS ON ((HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)))
		JOIN HASHES ON ((HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY)))
WHERE
		(HASHERS.DECEASED = 0) AND
		HASHES.HASH_KY <= ? AND
		HASHES.KENNEL_KY = ? AND
		HASHES.IS_HYPER = 0
GROUP BY HASHERS.HASHER_NAME
HAVING ((((THE_COUNT % 5) = 0)
		OR ((THE_COUNT % 69) = 0)
		OR ((THE_COUNT % 666) = 0)
		OR (((THE_COUNT - 69) % 100) = 0)))
		AND MAX_HASH_KY = ?
ORDER BY THE_COUNT DESC");

DEFINE("HYPER_HARE_ANALVERSARIES_FOR_EVENT","SELECT
		HASHERS.HASHER_NAME AS HASHER_NAME,
		(COUNT(*)) AS THE_COUNT,
		MAX(HARINGS.HARINGS_HASH_KY) AS MAX_HASH_KY
FROM
		((HASHERS
		JOIN HARINGS ON ((HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)))
		JOIN HASHES ON ((HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY)))
WHERE
		(HASHERS.DECEASED = 0) AND
		HASHES.HASH_KY <= ? AND
		HASHES.KENNEL_KY = ? AND
		HASHES.IS_HYPER = 1
GROUP BY HASHERS.HASHER_NAME
HAVING ((((THE_COUNT % 5) = 0)
		OR ((THE_COUNT % 69) = 0)
		OR ((THE_COUNT % 666) = 0)
		OR (((THE_COUNT - 69) % 100) = 0)))
		AND MAX_HASH_KY = ?
ORDER BY THE_COUNT DESC");

DEFINE("CONSOLIDATED_HARE_ANALVERSARIES_FOR_EVENT","SELECT * FROM (
	SELECT
			HASHERS.HASHER_NAME AS HASHER_NAME,
			(COUNT(*)) AS THE_COUNT,
			MAX(HARINGS.HARINGS_HASH_KY) AS MAX_HASH_KY,
			'Hyper' AS HARING_TYPE
	FROM
			((HASHERS
			JOIN HARINGS ON ((HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)))
			JOIN HASHES ON ((HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY)))
	WHERE
			(HASHERS.DECEASED = 0) AND
			HASHES.HASH_KY <= ? AND
			HASHES.KENNEL_KY = ? AND
			HASHES.IS_HYPER = 1
	GROUP BY HASHERS.HASHER_NAME
	HAVING ((((THE_COUNT % 5) = 0)
			OR ((THE_COUNT % 69) = 0)
			OR ((THE_COUNT % 666) = 0)
			OR (((THE_COUNT - 69) % 100) = 0)))
			AND MAX_HASH_KY = ?
	UNION
	SELECT
			HASHERS.HASHER_NAME AS HASHER_NAME,
			(COUNT(*)) AS THE_COUNT,
			MAX(HARINGS.HARINGS_HASH_KY) AS MAX_HASH_KY,
			'True' AS HARING_TYPE
	FROM
			((HASHERS
			JOIN HARINGS ON ((HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)))
			JOIN HASHES ON ((HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY)))
	WHERE
			(HASHERS.DECEASED = 0) AND
			HASHES.HASH_KY <= ? AND
			HASHES.KENNEL_KY = ? AND
			HASHES.IS_HYPER = 0
	GROUP BY HASHERS.HASHER_NAME
	HAVING ((((THE_COUNT % 5) = 0)
			OR ((THE_COUNT % 69) = 0)
			OR ((THE_COUNT % 666) = 0)
			OR (((THE_COUNT - 69) % 100) = 0)))
			AND MAX_HASH_KY = ?
	UNION
	SELECT
			HASHERS.HASHER_NAME AS HASHER_NAME,
			(COUNT(*)) AS THE_COUNT,
			MAX(HARINGS.HARINGS_HASH_KY) AS MAX_HASH_KY,
			'Overall' AS HARING_TYPE
	FROM
			((HASHERS
			JOIN HARINGS ON ((HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)))
			JOIN HASHES ON ((HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY)))
	WHERE
			(HASHERS.DECEASED = 0) AND
			HASHES.HASH_KY <= ? AND
			HASHES.KENNEL_KY = ?
	GROUP BY HASHERS.HASHER_NAME
	HAVING ((((THE_COUNT % 5) = 0)
			OR ((THE_COUNT % 69) = 0)
			OR ((THE_COUNT % 666) = 0)
			OR (((THE_COUNT - 69) % 100) = 0)))
			AND MAX_HASH_KY = ?
) DERIVED_TABLE
ORDER BY THE_COUNT DESC");
